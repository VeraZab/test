.content-section-p {
  $c: &; // sets this classname to a variable omg
  &-wrapper {
    @include global-wrapper;
    display: flex;
    $tb-spacing: $unit*4;
    padding-top: $tb-spacing;
    padding-bottom: $tb-spacing;
  }

  &:nth-of-type(even) {
    background: $color-rhino-light-4;
  }
  &-area {
    flex-grow: 1;
  }
  /*
   * Account for any column specific styles
   */
  &[class*="--column"] {
    /*
 * Alignment Styles
 * only really apply to column layout
 */
    &[class*="-align"] {
      /*
       * If center
       */
      &[class*="--center"] {
        #{$c}-wrapper {
          justify-content: center;

          #{$c}-graphic,
          #{$c}-details {
            margin-right: auto;
            margin-left: auto;
            text-align: center;
          }
          #{$c}-graphic {
            /* Let's prevent the graphic from getting too big */
            max-width: 800px;
            width: 100%;
          }
        }
      }
    }
    #{$c}-wrapper {
      flex-direction: column;
    }
  }

  /*
   * Account for any row specific styles
   */
  &[class*="--row"] {
    #{$c}-wrapper {
      align-items: center;

      @include media('<=800px') {
        flex-direction: column;
      }
    }
    /*
     * Set some sizes for the two main sections (details, graphic)
     */
    #{$c}-graphic,
    #{$c}-details {
      &-wrapper {
        width: 100%;
      }
      width: 50%;
      @include media('<=800px') {
        width: 100%;
      }
    }
    /*
     * row-auto
     * If the row contains '-auto' let's style it
     * this will alternate the order of the details
     * vs graphic
     */
    &[class*="-auto"] {
      &:nth-of-type(even) {
        #{$c}-graphic {
          @include media('>800px') {
            order: 1;
            padding-right: $unit*2;
          }
        }
        #{$c}-details {
          @include media('>800px') {
            order: 2;
            padding-left: $unit*2;
          }
          @include media('<=800px') {
            padding-bottom: $unit*2;
          }
        }
      }
      &:nth-of-type(odd) {
        #{$c}-graphic {
          @include media('>800px') {
            padding-left: $unit*2;
          }
        }
        #{$c}-details {
          @include media('>800px') {
            padding-right: $unit*2;
          }
          @include media('<=800px') {
            padding-bottom: $unit*2;
          }
        }
      }
    }
    /*
     * row-graphic-left
     * If the row contains '-left' let's style it
     * this only makes sure the padding is correct,
     * there is no need to change the order as this
     * is the default
     */
    &[class*="-left"] {
      #{$c}-graphic {
        @include media('>800px') {
          padding-left: $unit*2;
        }
      }
      #{$c}-details {
        @include media('>800px') {
          padding-right: $unit*2;
        }
        @include media('<=800px') {
          padding-bottom: $unit*2;
        }
      }
    }

    /*
    * row-graphic-right
    * If the row contains '-right' let's style it
    * this will place the graphic on the left
    */
    &[class*="-right"] {
      #{$c}-graphic {
        @include media('>800px') {
          order: 1;
          padding-right: $unit*2;
        }
      }
      #{$c}-details {
        @include media('>800px') {
          order: 2;
          padding-left: $unit*2;
        }
        @include media('<=800px') {
          padding-bottom: $unit*2;
        }
      }
    }

  }

  /*
   * Set some sizes for the two main sections (details, graphic)
   */

  #{$c}-graphic {
    &-style {
      &--shadow {
        .image {
          box-shadow: $drop-shadow-l-light;
        }
      }
    }
  }

  /*
   * Set some sizes for the two main sections (details, graphic)
   */

  #{$c}-actions {
    padding-top: $unit*2;
  }

  /*
   * Typographic styles
   */
  #{$c}-title {
    h1, h2, h3 {
      color: $color-rhino-dark;
      @extend .title-l;
    }
  }

  #{$c}-subtitle {
    h3 {
      color: $color-rhino-medium-1;
      font-size: 20px;
      line-height: 28px;
      text-transform: uppercase;
      letter-spacing: 2px;
    }
  }
  #{$c}-body {
    max-width: 600px;
    padding-top: $unit*2;

    &-columns {
      #{$c}-body-wrapper {
        display: flex;
        flex-wrap: wrap;
      }
      div[class*="-column"] {
        width: 100%;
        @include media('<=900px') {
          &:not(:first-of-type) {
            padding-top: $unit*2;
          }
        }
        @include media('>900px') {
          width: 50%;
          padding-right: $unit;
          &:not(:first-of-type) {
            padding-left: $unit;
          }
          &:last-of-type {
            padding-right: 0;
          }
        }
      }
    }

    h1, h2, h3, h4, h5, h6 {
      color: #6e7d92;
    }

    h3 {
      font-size: 24px;
      line-height: 36px;
      padding-bottom: $unit;
      font-weight: bold;
      //color: $color-dodger-shade;
      text-transform: uppercase;
      opacity: 0.75;
      letter-spacing: 2px;
    }
    p, ul, ol, blockquote {
      font-size: 18px;
      line-height: 34px;
      color: #6e7d92;
      font-weight: 300;
    }
    ul {
      margin: $unit*2 0;
      padding-top: $unit*2;
      padding-bottom: $unit*2;
      border-radius: 8px;
      font-weight: 400;
      padding-right: $unit*2;
      border: 1px solid chromatic-color-luminance($color-rhino-core, 0.75);

      background: url('https://now.plot.ly/static/images/patterns/plot-pattern-grey@2x.png') center center repeat chromatic-color-luminance($color-rhino-core, 0.9);
      color: chromatic-color-luminance($color-rhino-core, 0.1);

    }
    p {
      margin-top: 0;
      padding-top: 0;
      padding-bottom: 0;
      margin-bottom: 0;
      & + p {
        margin-top: $unit*1.5;
      }
    }
    ul, ol {
      margin: 0;
    }
  }

}